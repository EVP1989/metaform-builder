[{"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\index.tsx":"1","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\reportWebVitals.ts":"2","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\App.tsx":"3","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\generic\\HeaderNav.tsx":"4","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\styles\\theme.ts":"5","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\FormComponents.tsx":"6","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\ListOfComponents.tsx":"7","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\JsonPreview.tsx":"8","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\Preview.tsx":"9","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\generic\\HeaderNavTest.tsx":"10","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\model\\metaformExampleJSON.tsx":"11","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\model\\formComponentDustyWarehouse.tsx":"12"},{"size":517,"mtime":1611156951548,"results":"13","hashOfConfig":"14"},{"size":440,"mtime":1611156951549,"results":"15","hashOfConfig":"14"},{"size":869,"mtime":1612354922307,"results":"16","hashOfConfig":"14"},{"size":1983,"mtime":1612262684904,"results":"17","hashOfConfig":"14"},{"size":1558,"mtime":1612120849998,"results":"18","hashOfConfig":"14"},{"size":3530,"mtime":1612362449765,"results":"19","hashOfConfig":"14"},{"size":2497,"mtime":1612354217208,"results":"20","hashOfConfig":"14"},{"size":1210,"mtime":1612355166088,"results":"21","hashOfConfig":"14"},{"size":484,"mtime":1612264681752,"results":"22","hashOfConfig":"14"},{"size":2607,"mtime":1612354891221,"results":"23","hashOfConfig":"14"},{"size":2494,"mtime":1612354499538,"results":"24","hashOfConfig":"14"},{"size":1886,"mtime":1612354562480,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"oxu282",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\index.tsx",[],["53","54"],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\reportWebVitals.ts",[],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\App.tsx",[],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\generic\\HeaderNav.tsx",["55","56","57"],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\styles\\theme.ts",["58"],"import { createMuiTheme, responsiveFontSizes } from \"@material-ui/core\";\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nexport default createMuiTheme({\r\n    palette: {\r\n      primary: {\r\n        main: \"#1068B3\",\r\n        dark: \"#1076cc\"\r\n      },\r\n      secondary: { \r\n        main: \"#fff\",\r\n        dark: \"#eee\"\r\n      },\r\n      background: {\r\n        default: \"#ffffff\",\r\n        paper: \"#F5EFEA\"\r\n      },\r\n      text: {\r\n        primary: \"#000000\",\r\n        secondary: \"#26201E\",\r\n        disabled: \"#ddd\",\r\n        hint: \"#eee\"\r\n      }\r\n    },\r\n    typography: {\r\n      // Tells Material UI the font-size on the html element.\r\n      htmlFontSize: 16,\r\n      fontFamily: \"Open Sans, sans-serif\",\r\n      h1: {\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        fontWeight: 900\r\n      },\r\n      h2: {\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        fontWeight: 600\r\n      },\r\n      h3: {\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        fontWeight: 600\r\n      },\r\n      h4: {\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        fontWeight: 600\r\n      },\r\n      h5: {\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        fontWeight: 600\r\n      },\r\n      h6: {\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        fontWeight: 600\r\n      },\r\n      body1: {\r\n        fontFamily: \"Rubik, sans-serif\",\r\n        fontWeight: \"normal\"\r\n      },\r\n      body2: {\r\n        fontFamily: \"Open Sans, sans-serif\",\r\n        fontWeight: \"normal\",\r\n        fontSize: 16,\r\n        lineHeight: \"1.8rem\"\r\n      },\r\n    }\r\n  });","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\FormComponents.tsx",[],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\ListOfComponents.tsx",["59"],"import { Box, createStyles, Grid, List, ListItem, ListItemIcon, ListItemText, makeStyles, Theme } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport SubjectIcon from '@material-ui/icons/Subject';\r\nimport React, { useState } from 'react';\r\nimport addableComponents from '../model/formComponentDustyWarehouse';\r\nimport FormComponents from './FormComponents';\r\n\r\n//Styles\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      flexGrow: 1,\r\n      maxWidth: 250,\r\n    },\r\n    components: {\r\n      backgroundColor: theme.palette.background.default,\r\n        \r\n    },\r\n    icon: {\r\n      margin: theme.spacing(1, 2, 1),\r\n    },\r\n  }),\r\n);\r\n\r\ninterface Props {\r\n  formBlockList : any,\r\n  //metaformExampleJson? : any,\r\n  setFormBlockList : (newFormBlockList : any) => void\r\n}\r\n\r\n/**\r\n * Renders addable components\r\n * @param props\r\n */\r\nconst ListOfComponents : React.FC<any> = (props : Props) => {\r\n\r\n  \r\n\r\n  const classes = useStyles();\r\n\r\n  const addableComponentsList = addableComponents;\r\n\r\n  /**\r\n     * Add new form component to component list \r\n     * @param component \r\n     * @param index \r\n     */\r\n    const addFormComponentToList = (component : any, index : number) => {\r\n\r\n      const newFormBlockList =  [...props.formBlockList];\r\n\r\n      let newFormBlock = addableComponentsList[index];\r\n\r\n      newFormBlockList.push(newFormBlock);\r\n\r\n      props.setFormBlockList(newFormBlockList);\r\n    \r\n    }\r\n\r\n  return (\r\n  <>\r\n  <Grid container>\r\n  <Grid item md={3}>\r\n    <List>\r\n      <Typography variant=\"h5\">\r\n        Komponentit\r\n      </Typography>\r\n      {addableComponentsList && addableComponentsList.map((component, index) => (\r\n        <ListItem\r\n          key={index} draggable\r\n          className={classes.components}\r\n          onClick={(e) => addFormComponentToList(component, index)}\r\n          >\r\n          <Box border={1} display=\"flex\" pr={3}>\r\n            <ListItemIcon className={classes.icon}>\r\n              <SubjectIcon />\r\n            </ListItemIcon>\r\n            <ListItemText >\r\n              <Typography variant=\"h6\" >\r\n                {component.placeholder}\r\n              </Typography>\r\n            </ListItemText>\r\n          </Box>\r\n        </ListItem>\r\n      ))}\r\n    </List> \r\n    </Grid>\r\n    <Grid item md={9}>\r\n      <FormComponents formBlockList={props.formBlockList} setFormBlockList={props.setFormBlockList}/>\r\n    </Grid>\r\n  </Grid>\r\n  </>\r\n  );\r\n\r\n};\r\nexport default ListOfComponents;","C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\JsonPreview.tsx",["60"],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\Preview.tsx",[],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\components\\generic\\HeaderNavTest.tsx",["61"],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\model\\metaformExampleJSON.tsx",[],"C:\\Metatavu\\Metaform\\metaform-builder\\metaform-builder\\metaform-builder\\src\\model\\formComponentDustyWarehouse.tsx",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":4,"column":8,"nodeType":"68","messageId":"69","endLine":4,"endColumn":12},{"ruleId":"66","severity":1,"message":"70","line":15,"column":8,"nodeType":"68","messageId":"69","endLine":15,"endColumn":24},{"ruleId":"66","severity":1,"message":"71","line":25,"column":7,"nodeType":"68","messageId":"69","endLine":25,"endColumn":19},{"ruleId":"66","severity":1,"message":"72","line":4,"column":29,"nodeType":"68","messageId":"69","endLine":4,"endColumn":34},{"ruleId":"66","severity":1,"message":"73","line":4,"column":17,"nodeType":"68","messageId":"69","endLine":4,"endColumn":25},{"ruleId":"66","severity":1,"message":"74","line":18,"column":26,"nodeType":"68","messageId":"69","endLine":18,"endColumn":41},{"ruleId":"66","severity":1,"message":"75","line":27,"column":38,"nodeType":"68","messageId":"69","endLine":27,"endColumn":43},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'ListOfComponents' is defined but never used.","'LinkBehavior' is assigned a value but never used.","'theme' is assigned a value but never used.","'useState' is defined but never used.","'setMetaformJson' is assigned a value but never used.","'other' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]